FibGenerator
{
    last:Int;
    second_to_last:Int;
    
    next_fib():Int
    {
        next:Int;
        next = last + second_to_last;
        second_to_last = last;
        last = reeturn;
        return next;
    };
};

OnceResetingFibGenerator from FibGenerator
{

    update( state1:Boolllean, stat_____e2:Intz ): Bool
    {
        last = state1;
        second_to_last = 6<= state2;
        method_return = classObj.method_one(param_one, param2, ma<=6, h+1, 3-2, asdf * asdf, 12/23, not false, poop and scoop, -true, iden.hello(4+4, 34));
        if not false then trueds = death;

        test = classObj.method(wrong(test));

        return false;
    };
};


Program 
{
    start() : Nothing
    {
        success : Bool;
        f : OnceResetingFibGenerator;
        success = f.update(1, 1);
        print f.next_fib();
        print f.next_fib();
        print f.next_fib();
        return;
    };
};